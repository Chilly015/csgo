<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cs.sys.dao.SysRoleDao">
    <sql id="queryWhereId">
        <where>
            <if test="username!=null and username!=''">
                username like concat ("%",#{username},"%")
            </if>
        </where>
    </sql>

    <select id="findObjects" resultType="com.cs.sys.entity.SysRole">
        select * from sys_roles <include refid="queryWhereId"></include>
        order by createdTime desc limit #{startIndex},#{pageSize}
    </select>
    
    <select id="findObjectById" resultMap="sysRoleMenuVo">
        select id,name,note from sys_roles where id=#{id};
    </select>
    
    <resultMap id="sysRoleMenuVo" type="com.cs.common.vo.SysRoleMenuVo">
        <!-- 假如基于id做关联查询，又希望将id值存储到值对象，
                           可以对id进行专门映射 -->
        <id property="id" column="id"/>
        <!-- collection一般应用于one2many查询 -->
        <collection property="menuIds"
                    select="com.cs.sys.dao.SysRoleMenuDao.findMenuIdsByRoleId"
                    column="id">
        </collection>
    </resultMap>
    
    <insert id="insertObject"
            parameterType="com.cs.sys.entity.SysRole"
            useGeneratedKeys="true"
            keyProperty="id">
    insert into sys_roles
    (id,name,note,createdTime,modifiedTime,
    createdUser,modifiedUser)
    values
    (null,#{name},#{note},now(),now(),
    #{createdUser},#{modifiedUser})
    </insert>

    <update id="updateObject"
            parameterType="com.cs.sys.entity.SysRole">
       update sys_roles
         set
           name=#{name},
           note=#{note},
           modifiedUser=#{modifiedUser},
           modifiedTime=now()
        where id=#{id}
    </update>
</mapper>